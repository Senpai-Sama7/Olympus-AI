name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install fastapi uvicorn[standard] pydantic python-dotenv httpx prometheus-client
          pip install ruff black mypy bandit pip-audit detect-secrets
      - name: Lint
        run: |
          ruff check apps/ packages/ tests/
          black --check apps/ packages/ tests/
      - name: Type check
        run: |
          mypy apps packages
      - name: Tests
        run: pytest -q --maxfail=1 --disable-warnings --cov=apps --cov=packages --cov-report=xml:coverage.xml --cov-fail-under=80
      - name: Smoke
        run: make smoke
      - name: Security scans (blocking)
        run: |
          pip-audit -r requirements-dev.txt
          bandit -q -r apps packages services
          detect-secrets scan --all-files > .secrets.baseline
      - name: Prometheus rule check
        run: |
          docker run --rm -v ${{ github.workspace }}:/work prom/prometheus promtool check rules /work/alerts.yml

  node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Client lint/audit
        run: |
          if [ -f client/package.json ]; then cd client && npm ci && npm run -s lint && npm audit --omit=dev --audit-level=high; fi
      - name: Server lint/audit
        run: |
          if [ -f server/package.json ]; then cd server && npm ci && npm run -s lint && npm audit --omit=dev --audit-level=high; fi

  images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: false
          tags: local/enterprise-server:ci
      - name: Build client image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: false
          tags: local/enterprise-client:ci
      - name: Build exec-service image
        uses: docker/build-push-action@v5
        with:
          context: ./services/exec-service
          push: false
          tags: local/exec-service:ci
      - name: Build webbot-service image
        uses: docker/build-push-action@v5
        with:
          context: ./services/webbot-service
          push: false
          tags: local/webbot-service:ci
      - uses: aquasecurity/setup-trivy@v0.2.2
      - name: Scan images with Trivy (fail on HIGH/CRITICAL)
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL local/enterprise-server:ci
          trivy image --exit-code 1 --severity HIGH,CRITICAL local/enterprise-client:ci
          trivy image --exit-code 1 --severity HIGH,CRITICAL local/exec-service:ci
          trivy image --exit-code 1 --severity HIGH,CRITICAL local/webbot-service:ci
